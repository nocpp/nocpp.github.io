(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{593:function(t,a,r){"use strict";r.r(a);var s=r(8),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"浏览器内核"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#浏览器内核"}},[t._v("#")]),t._v(" 浏览器内核")]),t._v(" "),r("p",[t._v("主要分两个部分：渲染引擎、js引擎")]),t._v(" "),r("h3",{attrs:{id:"渲染引擎"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#渲染引擎"}},[t._v("#")]),t._v(" 渲染引擎：")]),t._v(" "),r("p",[t._v("负责取得网页的内容（html css img ...），以及计算网页的显示方式，然后会输出至显示器或者打印机。浏览器的内核不同对于网页的语法解释也不同，所以渲染的效果也不一样")]),t._v(" "),r("h3",{attrs:{id:"js引擎"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#js引擎"}},[t._v("#")]),t._v(" js引擎：")]),t._v(" "),r("p",[t._v("解析和执行javascript 来实现网页的动态效果，最开始渲染引擎和js引擎并没有区分的很明确，后来js引擎越来越独立，内核就倾向于只指渲染引擎")]),t._v(" "),r("h3",{attrs:{id:"常见浏览器内核"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#常见浏览器内核"}},[t._v("#")]),t._v(" 常见浏览器内核")]),t._v(" "),r("ul",[r("li",[t._v("IE : trident 内核")]),t._v(" "),r("li",[t._v("Firefox : gecko 内核")]),t._v(" "),r("li",[t._v("Safari : webkit 内核")]),t._v(" "),r("li",[t._v("Opera : 以前是 presto 内核， Opera 现已改用Google - Chrome 的 Blink 内核")]),t._v(" "),r("li",[t._v("Chrome: Blink (基于 webkit的精简版 ，Google与Opera Software共同开发)")])])])}),[],!1,null,null,null);a.default=e.exports}}]);